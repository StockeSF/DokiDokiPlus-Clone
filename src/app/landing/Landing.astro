---
import { langSelector } from '@shared/utils/i18n'
import { labels } from '@landing/i18n/config'

import Layout from '@shared/layouts/Layout.astro'

import Menu from '@landing/components/layout/Menu.svelte'

import Intro from '@landing/components/sections/Intro.astro'
import Reviews from '@landing/components/sections/Reviews.astro'
import Features from '@landing/components/sections/Features.astro'
import Characters from '@landing/components/sections/Characters.astro'
import BuyNow from '@landing/components/sections/BuyNow.astro'
import Newsletter from '@landing/components/sections/Newsletter.astro'

const { currentLocale = 'en' } = Astro

const lang = langSelector({ currentLocale, labels })
const SEO = lang.seo
const KEYS = lang.keys
---

<Layout title={SEO.title} description={SEO.description} isLanding={true}>
  <Menu keys={KEYS} statics={lang.ui} client:load />

  <Intro
    id={[KEYS[0], KEYS[1]]}
    statics={lang.intro}
    trailerStatics={lang.trailer}
  />

  <div class="content">
    <Reviews id={KEYS[2]} statics={lang.reviews} />
    <Features id={KEYS[3]} statics={lang.features} />
    <Characters id={KEYS[4]} statics={lang.characters} />
    <BuyNow id={KEYS[5]} statics={lang.buynow} />
    <Newsletter id={KEYS[6]} statics={lang.newsletter} />
  </div>
</Layout>

<script>
  import { $$ } from '@shared/utils/dom-selector'

  import { TranslateAnimation } from '@landing/utils/translate-animation'

  const elements = $$('[data-translate-style]')
  const translate = new TranslateAnimation(elements)

  const observedElements = $$('[data-intersection-observer]')

  const options: IntersectionObserverInit = { threshold: .2 }

  const addStyle = (entry: HTMLElement) => {
    const type = entry.dataset.intersectionObserver
    entry.classList.add(`animate--${type}`)
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const element = entry.target as HTMLElement
        addStyle(element)
        observer.unobserve(element)
      }
    })
  }, options)
  
  observedElements.forEach(el => {
    el.classList.add('animate')
    observer.observe(el)
  })
  translate.init()
</script>

<style is:global>
  @import url('./styles/others/translate.css');
  @import url('./styles/components/dokibox.css');
</style>
